{"version":3,"sources":["jutut/cart.js","jutut/tavarat.js","jutut/kassa.js","App.js","reportWebVitals.js","index.js"],"names":["Ostokset","lista","AddCart","RemoveCart","UpdateCart","setMain","ostoslista","map","a","i","count","className","name","price","onClick","id","type","value","onChange","e","target","reduce","b","Number","Math","round","Kori","Tuote","item","useState","showText1","setShowText1","src","pic","alt","desc","Tuotteet","setTotal","h","Maksaminen","customer","setCustomer","setName","lastname","setLastname","email","setEmail","phone","setPhone","address","setAddress","city","setCity","postcode","setPostcode","showreceipt","setreceipt","onSubmit","preventDefault","for","required","document","getElementById","selling","App","total","showmain","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8497af1a.chunk.js","sourcesContent":["const Ostokset = ({lista,AddCart,RemoveCart,UpdateCart,setMain}) => {\r\n    const ostoslista = lista.map((a,i)=>{\r\n            if(a.count > 0){\r\n                return(\r\n                    <div key={i} className=\"cartitem\">\r\n                        <div className=\"itemname\">\r\n                            <p className=\"margin0\"><b>{a.name}</b> {a.price}€/piece</p>\r\n                        </div>\r\n                        <div className=\"numofitems\">\r\n                            <button onClick={()=>AddCart(a.id)} className=\"cartbutton\">+</button>\r\n                            <input type=\"number\" value={a.count} onChange={e => UpdateCart(a.id,e.target.value)} className=\"itemcount\"></input>\r\n                            <button onClick={()=>RemoveCart(a.id)} className=\"cartbutton\">-</button>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n    );\r\n    if(lista.map(a => a.count).reduce((a,b) => Number(a) + Number(b)) > 0){\r\n        return(\r\n            <div className=\"cart\">\r\n                <p className=\"total\">\r\n                    Total: {Math.round(lista.map(a => a.count * a.price).reduce((a,b) => Number(a) + Number(b)) * 100) / 100}€\r\n                </p>\r\n                {ostoslista}\r\n                <button onClick={()=>setMain(false)} className=\"checkoutbutton\">Checkout</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst Kori = (lista,AddCart,RemoveCart,UpdateCart,setMain) =>{\r\n\r\n    return(\r\n        <div>\r\n            {Ostokset(lista,AddCart,RemoveCart,UpdateCart,setMain)}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport {Kori};","import React, { useState } from \"react\";\r\nimport {Kori} from \"./cart.js\";\r\n\r\nconst Tuote = ({item,AddCart}) => {\r\n    const [showText1, setShowText1] = useState(true);\r\n    const onClick1 = () => setShowText1(!showText1);\r\n    return(\r\n        <div className=\"item\">\r\n        <img src={item.pic} alt={item.alt} className=\"itempic\"/>\r\n            <p><b>{item.name}</b></p>\r\n            <p>{item.price} per piece</p>\r\n            <div onClick={onClick1}>\r\n            {showText1 ?\r\n            <p className=\"lisatieto\">More Information...</p>: <p>{item.desc}</p>}\r\n            </div>\r\n            <button onClick={()=>AddCart(item.id)} className=\"addtocart\">Add to Cart</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Tuotteet = ({a,setTotal,setMain}) => {\r\n\r\n    const AddCart = (id) => {\r\n        setTotal(a.map(item => {\r\n            if(item.id === id){\r\n                item = {...item, count: Number(item.count) + 1}\r\n            }\r\n                return item\r\n        }))\r\n    }\r\n\r\n    const RemoveCart = (id) => {\r\n        setTotal(a.map(item => {\r\n            if(item.id === id){\r\n                item = {...item, count: Number(item.count) - 1}\r\n            }\r\n                return item\r\n        }))\r\n    }\r\n\r\n    const UpdateCart = (id,h) => {\r\n        setTotal(a.map(item => {\r\n            if(item.id === id){\r\n                item = {...item, count: h}\r\n            }\r\n                return item\r\n        }))\r\n    }\r\n\r\n\r\n    return(\r\n        <div >\r\n            <div className=\"products\">\r\n                {a.map((item,i) => <Tuote key={i} item={item} AddCart={AddCart}/>)}\r\n            </div>\r\n            <div>\r\n                <Kori lista={a} AddCart={AddCart} RemoveCart={RemoveCart} UpdateCart={UpdateCart} setMain={setMain}/>\r\n            </div>\r\n        </div>\r\n        )\r\n}\r\n\r\n\r\nexport default Tuotteet;","import React, { useState } from \"react\";\r\n\r\nconst Maksaminen = (lista) =>{\r\n    const [customer, setCustomer] = useState(\"\")\r\n    const [name, setName] = useState(\"\")\r\n    const [lastname, setLastname] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [phone, setPhone] = useState(\"\")\r\n    const [address, setAddress] = useState(\"\")\r\n    const [city, setCity] = useState(\"\")\r\n    const [postcode, setPostcode] = useState(\"\")\r\n    const [showreceipt, setreceipt] = useState(false)\r\n\r\n    const newname = () =>{\r\n        setName(document.getElementById(\"name\").value);\r\n    }\r\n    const newlastname = () =>{\r\n        setLastname(document.getElementById(\"lastname\").value);  \r\n    }\r\n    const newemail = () =>{\r\n        setEmail(document.getElementById(\"email\").value);\r\n    }\r\n    const newphone = () =>{\r\n        setPhone(document.getElementById(\"phone\").value);  \r\n    }\r\n    const newaddress = () =>{\r\n        setAddress(document.getElementById(\"address\").value);\r\n    }\r\n    const newcity = () =>{\r\n        setCity(document.getElementById(\"city\").value);  \r\n    }\r\n    const newpostcode = () =>{\r\n        setPostcode(document.getElementById(\"postcode\").value);\r\n    }\r\n\r\n    const send = (e) =>{\r\n        e.preventDefault();\r\n        const tiedot = {name,lastname,email,phone,address,city,postcode}\r\n        setCustomer(tiedot)\r\n        setName(\"\");\r\n        setLastname(\"\");\r\n        setEmail(\"\");\r\n        setPhone(\"\");\r\n        setAddress(\"\");\r\n        setCity(\"\");\r\n        setPostcode(\"\");\r\n        setreceipt(true);\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <button onClick={()=>{setreceipt(false);lista.setMain(true)}} className=\"back\">Back</button>\r\n            {showreceipt ?\r\n\r\n            <div className=\"receipt\">\r\n                <h2>Thank you for your purchase</h2>\r\n                <p><b>Total:</b> {Math.round(lista.lista.map(a => a.count * a.price).reduce((a,b) => Number(a) + Number(b)) * 100) / 100}€</p>\r\n            {lista.lista.map((a,i)=>{if(a.count > 0){return(<p key={i}><b>{a.name}:</b> {a.count}/{Math.round(a.count * a.price * 100) / 100}€</p>)}})}\r\n                <p><b>Name:</b> {customer.name} {customer.lastname}</p>\r\n                <p><b>Contact:</b> {customer.email}/{customer.phone}</p>\r\n                <p><b>Address:</b> {customer.address}</p>\r\n                <p><b>City:</b> {customer.city} {customer.postcode}</p>\r\n            </div>:\r\n\r\n            <div className=\"customerinfo\">\r\n                <form onSubmit={send}>\r\n                    <div className=\"personal\">\r\n                        <h2>Personal Info</h2>\r\n                        <label for=\"name\">Name:</label>\r\n                        <input type=\"text\" id=\"name\" value={name} required onChange={newname} className=\"infoinput\"></input><br/>\r\n                        <label for=\"lastname\">Last Name:</label>\r\n                        <input type=\"text\" id=\"lastname\" value={lastname} required onChange={newlastname} className=\"infoinput\"></input><br/>\r\n                        <label for=\"email\">Email:</label>\r\n                        <input type=\"email\" id=\"email\" value={email} required onChange={newemail} className=\"infoinput\"></input><br/>\r\n                        <label for=\"phone\">Phone:</label>\r\n                        <input type=\"number\" id=\"phone\" value={phone} required onChange={newphone} className=\"infoinput\"></input><br/>\r\n                    </div>\r\n\r\n                    <div className=\"delivery\">\r\n                        <h2>Delivery Info</h2>\r\n                        <label for=\"address\">Address:</label>\r\n                        <input type=\"text\" id=\"address\" value={address} required onChange={newaddress} className=\"infoinput\"></input><br/>\r\n                        <label for=\"city\">City:</label>\r\n                        <input type=\"text\" id=\"city\" value={city} required onChange={newcity} className=\"infoinput\"></input><br/>\r\n                        <label for=\"postcode\">Postcode:</label>\r\n                        <input type=\"text\" id=\"postcode\" value={postcode} required onChange={newpostcode} className=\"infoinput\"></input><br/>\r\n                        <input type=\"submit\" value=\"Order\" className=\"order\"></input>\r\n                    </div>\r\n                </form>\r\n            </div>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Maksaminen;","import './App.css';\r\nimport React, { useState } from \"react\";\r\nimport Tuotteet from \"./jutut/tavarat.js\";\r\nimport Maksaminen from \"./jutut/kassa.js\";\r\n\r\nconst ape = {\r\n  name:\"Ape\",\r\n  price:499.99,\r\n  desc:\"A funny looking pet for a rich man\",\r\n  pic:\"https://freesvg.org/img/papapishu-ape-1.png\",\r\n  alt:\"Burger\",\r\n  count:0,\r\n  id:0\r\n}\r\n\r\nconst bullfrog = {\r\n  name:\"Bullfrog\",\r\n  price:199.99,\r\n  desc:\"A frog that ate a whole bull and is now the size of a man\",\r\n  pic:\"https://freesvg.org/img/papapishu-Bullfrog.png\",\r\n  alt:\"Burger\",\r\n  count:0,\r\n  id:1\r\n}\r\n\r\nconst polecat = {\r\n  name:\"Polecat\",\r\n  price:0.99,\r\n  desc:\"Skinny trash panda\",\r\n  pic:\"https://freesvg.org/img/Polecat.png\",\r\n  alt:\"Burger\",\r\n  count:0,\r\n  id:2\r\n}\r\n\r\nconst slothbear = {\r\n  name:\"Sloth Bear\",\r\n  price:2499.99,\r\n  desc:\"Some kind of genetically modified bear\",\r\n  pic:\"https://freesvg.org/img/Sloth-bear-.png\",\r\n  alt:\"Burger\",\r\n  count:0,\r\n  id:3\r\n}\r\n\r\nconst raccoon = {\r\n  name:\"Raccoon\",\r\n  price:1.99,\r\n  desc:\"Fat trash panda\",\r\n  pic:\"https://freesvg.org/img/1298483681.png\",\r\n  alt:\"Burger\",\r\n  count:0,\r\n  id:4\r\n}\r\n\r\nconst selling = [ape, bullfrog, raccoon, polecat, slothbear];\r\n\r\nfunction App() {\r\n  const [total, setTotal] = useState(selling);\r\n  const [showmain, setMain] = useState(true);\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <p>\r\n          Not illegal shopping site\r\n        </p>\r\n      </header>\r\n    {showmain ?\r\n    <Tuotteet a={total} setTotal={setTotal} setMain={setMain}/> : <Maksaminen lista={total} setMain={setMain}/>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}